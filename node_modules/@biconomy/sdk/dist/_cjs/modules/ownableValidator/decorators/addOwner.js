"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addOwner = addOwner;
const module_sdk_1 = require("@rhinestone/module-sdk");
const account_abstraction_1 = require("viem/account-abstraction");
const utils_1 = require("viem/utils");
const AccountNotFound_1 = require("../../../account/utils/AccountNotFound.js");
async function addOwner(client, parameters) {
    const { account: account_ = client.account, maxFeePerGas, maxPriorityFeePerGas, nonce, owner } = parameters;
    if (!account_) {
        throw new AccountNotFound_1.AccountNotFoundError({
            docsPath: "/nexus/nexus-client/methods#sendtransaction"
        });
    }
    const account = (0, utils_1.parseAccount)(account_);
    const publicClient = account.client;
    const action = await (0, module_sdk_1.getAddOwnableValidatorOwnerAction)({
        account: { address: account.address, deployedOnChains: [], type: "nexus" },
        client: publicClient,
        owner
    });
    if (!("callData" in action)) {
        throw new Error("Error getting add owner action");
    }
    return (0, utils_1.getAction)(client, account_abstraction_1.sendUserOperation, "sendUserOperation")({
        calls: [
            {
                to: action.target,
                value: BigInt(action.value.toString()),
                data: action.callData
            }
        ],
        maxFeePerGas,
        maxPriorityFeePerGas,
        nonce,
        account
    });
}
//# sourceMappingURL=addOwner.js.map